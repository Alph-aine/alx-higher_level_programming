# run test with python3 -m doctest -v ./tests/0-add_integer.txt

First import method to test
>>> add_integer = __import__('0-add_integer').add_integer

SUCCESS CASES:

Test signed and unsigned ints and floats:
    >>> print(add_integer(2, 2))
    4
    >>> print(add_integer(-1, 3))
    2
    >>> print(add_integer(-1, -1))
    -2
    >>> print(add_integer(1.5, 2.4))
    3

Test case for default b=98 value:
    >>> print(add_integer(1))
    99

FAIL CASES:

Test no args:
    >>> print(add_integer(None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    
    >>> print(add_integer(None, None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test extra args:
    >>> print(add_integer(1, 2, 3)
    Traceback (most recent call last):
    ...
    SyntaxError: unexpected EOF while parsing

Test special case (float(NaN)):
    >>> print(add_integer(float(NaN)))
    Traceback (most recent call last):
    ...
    NameError: name 'NaN' is not defined

Test special case float(inf)/ overflow:
    >>> print(add_integer(float("inf")))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    >>> print(add_integer(float("-inf")))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Test other data types:
    >>> print(add_integer("hey"))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer(0, [1, 2,3]))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
